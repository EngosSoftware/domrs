use domrs::{CssProperty, SvgAttribute};

#[test]
fn display_should_work() {
  assert_eq!("accent-color", CssProperty::AccentColor.to_string());
  assert_eq!("align-content", CssProperty::AlignContent.to_string());
  assert_eq!("align-items", CssProperty::AlignItems.to_string());
  assert_eq!("align-self", CssProperty::AlignSelf.to_string());
  assert_eq!("all", CssProperty::All.to_string());
  assert_eq!("animation", CssProperty::Animation.to_string());
  assert_eq!("animation-delay", CssProperty::AnimationDelay.to_string());
  assert_eq!("animation-direction", CssProperty::AnimationDirection.to_string());
  assert_eq!("animation-duration", CssProperty::AnimationDuration.to_string());
  assert_eq!("animation-fill-mode", CssProperty::AnimationFillMode.to_string());
  assert_eq!("animation-iteration-count", CssProperty::AnimationIterationCount.to_string());
  assert_eq!("animation-name", CssProperty::AnimationName.to_string());
  assert_eq!("animation-play-state", CssProperty::AnimationPlayState.to_string());
  assert_eq!("animation-timing-function", CssProperty::AnimationTimingFunction.to_string());
  assert_eq!("aspect-ratio", CssProperty::AspectRatio.to_string());
  assert_eq!("backdrop-filter", CssProperty::BackdropFilter.to_string());
  assert_eq!("backface-visibility", CssProperty::BackfaceVisibility.to_string());
  assert_eq!("background", CssProperty::Background.to_string());
  assert_eq!("background-attachment", CssProperty::BackgroundAttachment.to_string());
  assert_eq!("background-blend-mode", CssProperty::BackgroundBlendMode.to_string());
  assert_eq!("background-clip", CssProperty::BackgroundClip.to_string());
  assert_eq!("background-color", CssProperty::BackgroundColor.to_string());
  assert_eq!("background-image", CssProperty::BackgroundImage.to_string());
  assert_eq!("background-origin", CssProperty::BackgroundOrigin.to_string());
  assert_eq!("background-position", CssProperty::BackgroundPosition.to_string());
  assert_eq!("background-position-x", CssProperty::BackgroundPositionX.to_string());
  assert_eq!("background-position-y", CssProperty::BackgroundPositionY.to_string());
  assert_eq!("background-repeat", CssProperty::BackgroundRepeat.to_string());
  assert_eq!("background-size", CssProperty::BackgroundSize.to_string());
  assert_eq!("block-size", CssProperty::BlockSize.to_string());
  assert_eq!("border", CssProperty::Border.to_string());
  assert_eq!("border-block", CssProperty::BorderBlock.to_string());
  assert_eq!("border-block-color", CssProperty::BorderBlockColor.to_string());
  assert_eq!("border-block-end", CssProperty::BorderBlockEnd.to_string());
  assert_eq!("border-block-end-color", CssProperty::BorderBlockEndColor.to_string());
  assert_eq!("border-block-end-style", CssProperty::BorderBlockEndStyle.to_string());
  assert_eq!("border-block-end-width", CssProperty::BorderBlockEndWidth.to_string());
  assert_eq!("border-block-start", CssProperty::BorderBlockStart.to_string());
  assert_eq!("border-block-start-color", CssProperty::BorderBlockStartColor.to_string());
  assert_eq!("border-block-start-style", CssProperty::BorderBlockStartStyle.to_string());
  assert_eq!("border-block-start-width", CssProperty::BorderBlockStartWidth.to_string());
  assert_eq!("border-block-style", CssProperty::BorderBlockStyle.to_string());
  assert_eq!("border-block-width", CssProperty::BorderBlockWidth.to_string());
  assert_eq!("border-bottom", CssProperty::BorderBottom.to_string());
  assert_eq!("border-bottom-color", CssProperty::BorderBottomColor.to_string());
  assert_eq!("border-bottom-left-radius", CssProperty::BorderBottomLeftRadius.to_string());
  assert_eq!("border-bottom-right-radius", CssProperty::BorderBottomRightRadius.to_string());
  assert_eq!("border-bottom-style", CssProperty::BorderBottomStyle.to_string());
  assert_eq!("border-bottom-width", CssProperty::BorderBottomWidth.to_string());
  assert_eq!("border-collapse", CssProperty::BorderCollapse.to_string());
  assert_eq!("border-color", CssProperty::BorderColor.to_string());
  assert_eq!("border-end-end-radius", CssProperty::BorderEndEndRadius.to_string());
  assert_eq!("border-end-start-radius", CssProperty::BorderEndStartRadius.to_string());
  assert_eq!("border-image", CssProperty::BorderImage.to_string());
  assert_eq!("border-image-outset", CssProperty::BorderImageOutset.to_string());
  assert_eq!("border-image-repeat", CssProperty::BorderImageRepeat.to_string());
  assert_eq!("border-image-slice", CssProperty::BorderImageSlice.to_string());
  assert_eq!("border-image-source", CssProperty::BorderImageSource.to_string());
  assert_eq!("border-image-width", CssProperty::BorderImageWidth.to_string());
  assert_eq!("border-inline", CssProperty::BorderInline.to_string());
  assert_eq!("border-inline-color", CssProperty::BorderInlineColor.to_string());
  assert_eq!("border-inline-end", CssProperty::BorderInlineEnd.to_string());
  assert_eq!("border-inline-end-color", CssProperty::BorderInlineEndColor.to_string());
  assert_eq!("border-inline-end-style", CssProperty::BorderInlineEndStyle.to_string());
  assert_eq!("border-inline-end-width", CssProperty::BorderInlineEndWidth.to_string());
  assert_eq!("border-inline-start", CssProperty::BorderInlineStart.to_string());
  assert_eq!("border-inline-start-color", CssProperty::BorderInlineStartColor.to_string());
  assert_eq!("border-inline-start-style", CssProperty::BorderInlineStartStyle.to_string());
  assert_eq!("border-inline-start-width", CssProperty::BorderInlineStartWidth.to_string());
  assert_eq!("border-inline-style", CssProperty::BorderInlineStyle.to_string());
  assert_eq!("border-inline-width", CssProperty::BorderInlineWidth.to_string());
  assert_eq!("border-left", CssProperty::BorderLeft.to_string());
  assert_eq!("border-left-color", CssProperty::BorderLeftColor.to_string());
  assert_eq!("border-left-style", CssProperty::BorderLeftStyle.to_string());
  assert_eq!("border-left-width", CssProperty::BorderLeftWidth.to_string());
  assert_eq!("border-radius", CssProperty::BorderRadius.to_string());
  assert_eq!("border-right", CssProperty::BorderRight.to_string());
  assert_eq!("border-right-color", CssProperty::BorderRightColor.to_string());
  assert_eq!("border-right-style", CssProperty::BorderRightStyle.to_string());
  assert_eq!("border-right-width", CssProperty::BorderRightWidth.to_string());
  assert_eq!("border-spacing", CssProperty::BorderSpacing.to_string());
  assert_eq!("border-start-end-radius", CssProperty::BorderStartEndRadius.to_string());
  assert_eq!("border-start-start-radius", CssProperty::BorderStartStartRadius.to_string());
  assert_eq!("border-style", CssProperty::BorderStyle.to_string());
  assert_eq!("border-top", CssProperty::BorderTop.to_string());
  assert_eq!("border-top-color", CssProperty::BorderTopColor.to_string());
  assert_eq!("border-top-left-radius", CssProperty::BorderTopLeftRadius.to_string());
  assert_eq!("border-top-right-radius", CssProperty::BorderTopRightRadius.to_string());
  assert_eq!("border-top-style", CssProperty::BorderTopStyle.to_string());
  assert_eq!("border-top-width", CssProperty::BorderTopWidth.to_string());
  assert_eq!("border-width", CssProperty::BorderWidth.to_string());
  assert_eq!("bottom", CssProperty::Bottom.to_string());
  assert_eq!("box-decoration-break", CssProperty::BoxDecorationBreak.to_string());
  assert_eq!("box-reflect", CssProperty::BoxReflect.to_string());
  assert_eq!("box-shadow", CssProperty::BoxShadow.to_string());
  assert_eq!("box-sizing", CssProperty::BoxSizing.to_string());
  assert_eq!("break-after", CssProperty::BreakAfter.to_string());
  assert_eq!("break-before", CssProperty::BreakBefore.to_string());
  assert_eq!("break-inside", CssProperty::BreakInside.to_string());
  assert_eq!("caption-side", CssProperty::CaptionSide.to_string());
  assert_eq!("caret-color", CssProperty::CaretColor.to_string());
  assert_eq!("@charset", CssProperty::AtCharset.to_string());
  assert_eq!("clear", CssProperty::Clear.to_string());
  assert_eq!("clip", CssProperty::Clip.to_string());
  assert_eq!("clip-path", CssProperty::ClipPath.to_string());
  assert_eq!("color", CssProperty::Color.to_string());
  assert_eq!("column-count", CssProperty::ColumnCount.to_string());
  assert_eq!("column-fill", CssProperty::ColumnFill.to_string());
  assert_eq!("column-gap", CssProperty::ColumnGap.to_string());
  assert_eq!("column-rule", CssProperty::ColumnRule.to_string());
  assert_eq!("column-rule-color", CssProperty::ColumnRuleColor.to_string());
  assert_eq!("column-rule-style", CssProperty::ColumnRuleStyle.to_string());
  assert_eq!("column-rule-width", CssProperty::ColumnRuleWidth.to_string());
  assert_eq!("column-span", CssProperty::ColumnSpan.to_string());
  assert_eq!("column-width", CssProperty::ColumnWidth.to_string());
  assert_eq!("columns", CssProperty::Columns.to_string());
  assert_eq!("content", CssProperty::Content.to_string());
  assert_eq!("counter-increment", CssProperty::CounterIncrement.to_string());
  assert_eq!("counter-reset", CssProperty::CounterReset.to_string());
  assert_eq!("counter-set", CssProperty::CounterSet.to_string());
  assert_eq!("cursor", CssProperty::Cursor.to_string());
  assert_eq!("direction", CssProperty::Direction.to_string());
  assert_eq!("display", CssProperty::Display.to_string());
  assert_eq!("empty-cells", CssProperty::EmptyCells.to_string());
  assert_eq!("filter", CssProperty::Filter.to_string());
  assert_eq!("flex", CssProperty::Flex.to_string());
  assert_eq!("flex-basis", CssProperty::FlexBasis.to_string());
  assert_eq!("flex-direction", CssProperty::FlexDirection.to_string());
  assert_eq!("flex-flow", CssProperty::FlexFlow.to_string());
  assert_eq!("flex-grow", CssProperty::FlexGrow.to_string());
  assert_eq!("flex-shrink", CssProperty::FlexShrink.to_string());
  assert_eq!("flex-wrap", CssProperty::FlexWrap.to_string());
  assert_eq!("float", CssProperty::Float.to_string());
  assert_eq!("font", CssProperty::Font.to_string());
  assert_eq!("@font-face", CssProperty::AtFontFace.to_string());
  assert_eq!("font-family", CssProperty::FontFamily.to_string());
  assert_eq!("font-feature-settings", CssProperty::FontFeatureSettings.to_string());
  assert_eq!("@font-feature-values", CssProperty::AtFontFeatureValues.to_string());
  assert_eq!("font-kerning", CssProperty::FontKerning.to_string());
  assert_eq!("font-language-override", CssProperty::FontLanguageOverride.to_string());
  assert_eq!("font-size", CssProperty::FontSize.to_string());
  assert_eq!("font-size-adjust", CssProperty::FontSizeAdjust.to_string());
  assert_eq!("font-stretch", CssProperty::FontStretch.to_string());
  assert_eq!("font-style", CssProperty::FontStyle.to_string());
  assert_eq!("font-synthesis", CssProperty::FontSynthesis.to_string());
  assert_eq!("font-variant", CssProperty::FontVariant.to_string());
  assert_eq!("font-variant-alternates", CssProperty::FontVariantAlternates.to_string());
  assert_eq!("font-variant-caps", CssProperty::FontVariantCaps.to_string());
  assert_eq!("font-variant-east-asian", CssProperty::FontVariantEastAsian.to_string());
  assert_eq!("font-variant-ligatures", CssProperty::FontVariantLigatures.to_string());
  assert_eq!("font-variant-numeric", CssProperty::FontVariantNumeric.to_string());
  assert_eq!("font-variant-position", CssProperty::FontVariantPosition.to_string());
  assert_eq!("font-weight", CssProperty::FontWeight.to_string());
  assert_eq!("gap", CssProperty::Gap.to_string());
  assert_eq!("grid", CssProperty::Grid.to_string());
  assert_eq!("grid-area", CssProperty::GridArea.to_string());
  assert_eq!("grid-auto-columns", CssProperty::GridAutoColumns.to_string());
  assert_eq!("grid-auto-flow", CssProperty::GridAutoFlow.to_string());
  assert_eq!("grid-auto-rows", CssProperty::GridAutoRows.to_string());
  assert_eq!("grid-column", CssProperty::GridColumn.to_string());
  assert_eq!("grid-column-end", CssProperty::GridColumnEnd.to_string());
  assert_eq!("grid-column-gap", CssProperty::GridColumnGap.to_string());
  assert_eq!("grid-column-start", CssProperty::GridColumnStart.to_string());
  assert_eq!("grid-gap", CssProperty::GridGap.to_string());
  assert_eq!("grid-row", CssProperty::GridRow.to_string());
  assert_eq!("grid-row-end", CssProperty::GridRowEnd.to_string());
  assert_eq!("grid-row-gap", CssProperty::GridRowGap.to_string());
  assert_eq!("grid-row-start", CssProperty::GridRowStart.to_string());
  assert_eq!("grid-template", CssProperty::GridTemplate.to_string());
  assert_eq!("grid-template-areas", CssProperty::GridTemplateAreas.to_string());
  assert_eq!("grid-template-columns", CssProperty::GridTemplateColumns.to_string());
  assert_eq!("grid-template-rows", CssProperty::GridTemplateRows.to_string());
  assert_eq!("hanging-punctuation", CssProperty::HangingPunctuation.to_string());
  assert_eq!("height", CssProperty::Height.to_string());
  assert_eq!("hyphens", CssProperty::Hyphens.to_string());
  assert_eq!("hypenate-character", CssProperty::HypenateCharacter.to_string());
  assert_eq!("image-rendering", CssProperty::ImageRendering.to_string());
  assert_eq!("@import", CssProperty::AtImport.to_string());
  assert_eq!("inline-size", CssProperty::InlineSize.to_string());
  assert_eq!("inset", CssProperty::Inset.to_string());
  assert_eq!("inset-block", CssProperty::InsetBlock.to_string());
  assert_eq!("inset-block-end", CssProperty::InsetBlockEnd.to_string());
  assert_eq!("inset-block-start", CssProperty::InsetBlockStart.to_string());
  assert_eq!("inset-inline", CssProperty::InsetInline.to_string());
  assert_eq!("inset-inline-end", CssProperty::InsetInlineEnd.to_string());
  assert_eq!("inset-inline-start", CssProperty::InsetInlineStart.to_string());
  assert_eq!("isolation", CssProperty::Isolation.to_string());
  assert_eq!("justify-content", CssProperty::JustifyContent.to_string());
  assert_eq!("justify-items", CssProperty::JustifyItems.to_string());
  assert_eq!("justify-self", CssProperty::JustifySelf.to_string());
  assert_eq!("@keyframes", CssProperty::AtKeyframes.to_string());
  assert_eq!("left", CssProperty::Left.to_string());
  assert_eq!("letter-spacing", CssProperty::LetterSpacing.to_string());
  assert_eq!("line-break", CssProperty::LineBreak.to_string());
  assert_eq!("line-height", CssProperty::LineHeight.to_string());
  assert_eq!("list-style", CssProperty::ListStyle.to_string());
  assert_eq!("list-style-image", CssProperty::ListStyleImage.to_string());
  assert_eq!("list-style-position", CssProperty::ListStylePosition.to_string());
  assert_eq!("list-style-type", CssProperty::ListStyleType.to_string());
  assert_eq!("margin", CssProperty::Margin.to_string());
  assert_eq!("margin-block", CssProperty::MarginBlock.to_string());
  assert_eq!("margin-block-end", CssProperty::MarginBlockEnd.to_string());
  assert_eq!("margin-block-start", CssProperty::MarginBlockStart.to_string());
  assert_eq!("margin-bottom", CssProperty::MarginBottom.to_string());
  assert_eq!("margin-inline", CssProperty::MarginInline.to_string());
  assert_eq!("margin-inline-end", CssProperty::MarginInlineEnd.to_string());
  assert_eq!("margin-inline-start", CssProperty::MarginInlineStart.to_string());
  assert_eq!("margin-left", CssProperty::MarginLeft.to_string());
  assert_eq!("margin-right", CssProperty::MarginRight.to_string());
  assert_eq!("margin-top", CssProperty::MarginTop.to_string());
  assert_eq!("mask", CssProperty::Mask.to_string());
  assert_eq!("mask-clip", CssProperty::MaskClip.to_string());
  assert_eq!("mask-composite", CssProperty::MaskComposite.to_string());
  assert_eq!("mask-image", CssProperty::MaskImage.to_string());
  assert_eq!("mask-mode", CssProperty::MaskMode.to_string());
  assert_eq!("mask-origin", CssProperty::MaskOrigin.to_string());
  assert_eq!("mask-position", CssProperty::MaskPosition.to_string());
  assert_eq!("mask-repeat", CssProperty::MaskRepeat.to_string());
  assert_eq!("mask-size", CssProperty::MaskSize.to_string());
  assert_eq!("mask-type", CssProperty::MaskType.to_string());
  assert_eq!("max-height", CssProperty::MaxHeight.to_string());
  assert_eq!("max-width", CssProperty::MaxWidth.to_string());
  assert_eq!("@media", CssProperty::AtMedia.to_string());
  assert_eq!("max-block-size", CssProperty::MaxBlockSize.to_string());
  assert_eq!("max-inline-size", CssProperty::MaxInlineSize.to_string());
  assert_eq!("min-block-size", CssProperty::MinBlockSize.to_string());
  assert_eq!("min-inline-size", CssProperty::MinInlineSize.to_string());
  assert_eq!("min-height", CssProperty::MinHeight.to_string());
  assert_eq!("min-width", CssProperty::MinWidth.to_string());
  assert_eq!("mix-blend-mode", CssProperty::MixBlendMode.to_string());
  assert_eq!("object-fit", CssProperty::ObjectFit.to_string());
  assert_eq!("object-position", CssProperty::ObjectPosition.to_string());
  assert_eq!("offset", CssProperty::Offset.to_string());
  assert_eq!("offset-anchor", CssProperty::OffsetAnchor.to_string());
  assert_eq!("offset-distance", CssProperty::OffsetDistance.to_string());
  assert_eq!("offset-path", CssProperty::OffsetPath.to_string());
  assert_eq!("offset-rotate", CssProperty::OffsetRotate.to_string());
  assert_eq!("opacity", CssProperty::Opacity.to_string());
  assert_eq!("order", CssProperty::Order.to_string());
  assert_eq!("orphans", CssProperty::Orphans.to_string());
  assert_eq!("outline", CssProperty::Outline.to_string());
  assert_eq!("outline-color", CssProperty::OutlineColor.to_string());
  assert_eq!("outline-offset", CssProperty::OutlineOffset.to_string());
  assert_eq!("outline-style", CssProperty::OutlineStyle.to_string());
  assert_eq!("outline-width", CssProperty::OutlineWidth.to_string());
  assert_eq!("overflow", CssProperty::Overflow.to_string());
  assert_eq!("overflow-anchor", CssProperty::OverflowAnchor.to_string());
  assert_eq!("overflow-wrap", CssProperty::OverflowWrap.to_string());
  assert_eq!("overflow-x", CssProperty::OverflowX.to_string());
  assert_eq!("overflow-y", CssProperty::OverflowY.to_string());
  assert_eq!("overscroll-behavior", CssProperty::OverscrollBehavior.to_string());
  assert_eq!("overscroll-behavior-block", CssProperty::OverscrollBehaviorBlock.to_string());
  assert_eq!("overscroll-behavior-inline", CssProperty::OverscrollBehaviorInline.to_string());
  assert_eq!("overscroll-behavior-x", CssProperty::OverscrollBehaviorX.to_string());
  assert_eq!("overscroll-behavior-y", CssProperty::OverscrollBehaviorY.to_string());
  assert_eq!("padding", CssProperty::Padding.to_string());
  assert_eq!("padding-block", CssProperty::PaddingBlock.to_string());
  assert_eq!("padding-block-end", CssProperty::PaddingBlockEnd.to_string());
  assert_eq!("padding-block-start", CssProperty::PaddingBlockStart.to_string());
  assert_eq!("padding-bottom", CssProperty::PaddingBottom.to_string());
  assert_eq!("padding-inline", CssProperty::PaddingInline.to_string());
  assert_eq!("padding-inline-end", CssProperty::PaddingInlineEnd.to_string());
  assert_eq!("padding-inline-start", CssProperty::PaddingInlineStart.to_string());
  assert_eq!("padding-left", CssProperty::PaddingLeft.to_string());
  assert_eq!("padding-right", CssProperty::PaddingRight.to_string());
  assert_eq!("padding-top", CssProperty::PaddingTop.to_string());
  assert_eq!("page-break-after", CssProperty::PageBreakAfter.to_string());
  assert_eq!("page-break-before", CssProperty::PageBreakBefore.to_string());
  assert_eq!("page-break-inside", CssProperty::PageBreakInside.to_string());
  assert_eq!("paint-order", CssProperty::PaintOrder.to_string());
  assert_eq!("perspective", CssProperty::Perspective.to_string());
  assert_eq!("perspective-origin", CssProperty::PerspectiveOrigin.to_string());
  assert_eq!("place-content", CssProperty::PlaceContent.to_string());
  assert_eq!("place-items", CssProperty::PlaceItems.to_string());
  assert_eq!("place-self", CssProperty::PlaceSelf.to_string());
  assert_eq!("pointer-events", CssProperty::PointerEvents.to_string());
  assert_eq!("position", CssProperty::Position.to_string());
  assert_eq!("quotes", CssProperty::Quotes.to_string());
  assert_eq!("resize", CssProperty::Resize.to_string());
  assert_eq!("right", CssProperty::Right.to_string());
  assert_eq!("rotate", CssProperty::Rotate.to_string());
  assert_eq!("row-gap", CssProperty::RowGap.to_string());
  assert_eq!("scale", CssProperty::Scale.to_string());
  assert_eq!("scroll-behavior", CssProperty::ScrollBehavior.to_string());
  assert_eq!("scroll-margin", CssProperty::ScrollMargin.to_string());
  assert_eq!("scroll-margin-block", CssProperty::ScrollMarginBlock.to_string());
  assert_eq!("scroll-margin-block-end", CssProperty::ScrollMarginBlockEnd.to_string());
  assert_eq!("scroll-margin-block-start", CssProperty::ScrollMarginBlockStart.to_string());
  assert_eq!("scroll-margin-bottom", CssProperty::ScrollMarginBottom.to_string());
  assert_eq!("scroll-margin-inline", CssProperty::ScrollMarginInline.to_string());
  assert_eq!("scroll-margin-inline-end", CssProperty::ScrollMarginInlineEnd.to_string());
  assert_eq!("scroll-margin-inline-start", CssProperty::ScrollMarginInlineStart.to_string());
  assert_eq!("scroll-margin-left", CssProperty::ScrollMarginLeft.to_string());
  assert_eq!("scroll-margin-right", CssProperty::ScrollMarginRight.to_string());
  assert_eq!("scroll-margin-top", CssProperty::ScrollMarginTop.to_string());
  assert_eq!("scroll-padding", CssProperty::ScrollPadding.to_string());
  assert_eq!("scroll-padding-block", CssProperty::ScrollPaddingBlock.to_string());
  assert_eq!("scroll-padding-block-end", CssProperty::ScrollPaddingBlockEnd.to_string());
  assert_eq!("scroll-padding-block-start", CssProperty::ScrollPaddingBlockStart.to_string());
  assert_eq!("scroll-padding-bottom", CssProperty::ScrollPaddingBottom.to_string());
  assert_eq!("scroll-padding-inline", CssProperty::ScrollPaddingInline.to_string());
  assert_eq!("scroll-padding-inline-end", CssProperty::ScrollPaddingInlineEnd.to_string());
  assert_eq!("scroll-padding-inline-start", CssProperty::ScrollPaddingInlineStart.to_string());
  assert_eq!("scroll-padding-left", CssProperty::ScrollPaddingLeft.to_string());
  assert_eq!("scroll-padding-right", CssProperty::ScrollPaddingRight.to_string());
  assert_eq!("scroll-padding-top", CssProperty::ScrollPaddingTop.to_string());
  assert_eq!("scroll-snap-align", CssProperty::ScrollSnapAlign.to_string());
  assert_eq!("scroll-snap-stop", CssProperty::ScrollSnapStop.to_string());
  assert_eq!("scroll-snap-type", CssProperty::ScrollSnapType.to_string());
  assert_eq!("scrollbar-color", CssProperty::ScrollbarColor.to_string());
  assert_eq!("tab-size", CssProperty::TabSize.to_string());
  assert_eq!("table-layout", CssProperty::TableLayout.to_string());
  assert_eq!("text-align", CssProperty::TextAlign.to_string());
  assert_eq!("text-align-last", CssProperty::TextAlignLast.to_string());
  assert_eq!("text-combine-upright", CssProperty::TextCombineUpright.to_string());
  assert_eq!("text-decoration", CssProperty::TextDecoration.to_string());
  assert_eq!("text-decoration-color", CssProperty::TextDecorationColor.to_string());
  assert_eq!("text-decoration-line", CssProperty::TextDecorationLine.to_string());
  assert_eq!("text-decoration-style", CssProperty::TextDecorationStyle.to_string());
  assert_eq!("text-decoration-thickness", CssProperty::TextDecorationThickness.to_string());
  assert_eq!("text-emphasis", CssProperty::TextEmphasis.to_string());
  assert_eq!("text-emphasis-color", CssProperty::TextEmphasisColor.to_string());
  assert_eq!("text-emphasis-position", CssProperty::TextEmphasisPosition.to_string());
  assert_eq!("text-emphasis-style", CssProperty::TextEmphasisStyle.to_string());
  assert_eq!("text-indent", CssProperty::TextIndent.to_string());
  assert_eq!("text-justify", CssProperty::TextJustify.to_string());
  assert_eq!("text-orientation", CssProperty::TextOrientation.to_string());
  assert_eq!("text-overflow", CssProperty::TextOverflow.to_string());
  assert_eq!("text-shadow", CssProperty::TextShadow.to_string());
  assert_eq!("text-transform", CssProperty::TextTransform.to_string());
  assert_eq!("text-underline-offset", CssProperty::TextUnderlineOffset.to_string());
  assert_eq!("text-underline-position", CssProperty::TextUnderlinePosition.to_string());
  assert_eq!("top", CssProperty::Top.to_string());
  assert_eq!("transform", CssProperty::Transform.to_string());
  assert_eq!("transform-origin", CssProperty::TransformOrigin.to_string());
  assert_eq!("transform-style", CssProperty::TransformStyle.to_string());
  assert_eq!("transition", CssProperty::Transition.to_string());
  assert_eq!("transition-delay", CssProperty::TransitionDelay.to_string());
  assert_eq!("transition-duration", CssProperty::TransitionDuration.to_string());
  assert_eq!("transition-property", CssProperty::TransitionProperty.to_string());
  assert_eq!("transition-timing-function", CssProperty::TransitionTimingFunction.to_string());
  assert_eq!("translate", CssProperty::Translate.to_string());
  assert_eq!("unicode-bidi", CssProperty::UnicodeBidi.to_string());
  assert_eq!("user-select", CssProperty::UserSelect.to_string());
  assert_eq!("vertical-align", CssProperty::VerticalAlign.to_string());
  assert_eq!("visibility", CssProperty::Visibility.to_string());
  assert_eq!("white-space", CssProperty::WhiteSpace.to_string());
  assert_eq!("widows", CssProperty::Widows.to_string());
  assert_eq!("width", CssProperty::Width.to_string());
  assert_eq!("word-break", CssProperty::WordBreak.to_string());
  assert_eq!("word-spacing", CssProperty::WordSpacing.to_string());
  assert_eq!("word-wrap", CssProperty::WordWrap.to_string());
  assert_eq!("writing-mode", CssProperty::WritingMode.to_string());
  assert_eq!("z-index", CssProperty::ZIndex.to_string());
}

#[test]
fn clone_should_work() {
  assert_eq!(CssProperty::ZIndex.clone().to_string(), CssProperty::ZIndex.to_string());
}

#[test]
fn comparison_should_work() {
  assert!((CssProperty::ZIndex == CssProperty::ZIndex));
  assert!((CssProperty::ZIndex != CssProperty::Top));
  assert!((CssProperty::SvgAttribute(SvgAttribute::Fill) == CssProperty::SvgAttribute(SvgAttribute::Fill)));
}

#[test]
fn conversion_from_svg_attribute_should_work() {
  let property: CssProperty = SvgAttribute::Fill.into();
  assert_eq!("fill", property.to_string());
}
